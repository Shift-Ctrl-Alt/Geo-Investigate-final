<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oymn.geoinvestigatefinal.dao.mapper.RecordDao">

    <insert id="addRecord" useGeneratedKeys="true" keyProperty="id">
        insert into t_record(user_id, survey_time, lat, lng, crop_type, crop_variety, disease_type, disease_severity, pest_type, pest_severity, drought_severity, land_msg, module) 
        values (#{userId}, #{surveyTime}, #{lat}, #{lng}, #{cropType}, #{cropVariety},#{diseaseType}, #{diseaseSeverity}, #{pestType}, #{pestSeverity}, #{droughtSeverity}, #{landMsg}, #{module})
    </insert>
    <insert id="addDiseaseImg" useGeneratedKeys="true" keyProperty="id">
        insert into t_disease_img(record_id, url) VALUES (#{recordId}, #{imgUrl}) 
    </insert>
    <insert id="addPestImg" useGeneratedKeys="true" keyProperty="id">
        insert into t_pest_img(record_id, url) values (#{recordId}, #{imgUrl})
    </insert>
    <insert id="addDroughtImg" useGeneratedKeys="true" keyProperty="id">
        insert into t_drought_img(record_id, url) values (#{recordId}, #{imgUrl})
    </insert>
    <insert id="addDiseaseType" useGeneratedKeys="true" keyProperty="id">
        insert into t_disease_type(name_chs, name_en, create_user, is_manager) values (#{nameChs}, #{nameEn}, #{createUser}, #{isManager})
    </insert>
    <insert id="addPestType" useGeneratedKeys="true" keyProperty="id">
        insert into t_pest_type(name_chs, name_en, create_user, is_manager) values (#{nameChs}, #{nameEn}, #{createUser}, #{isManager})
    </insert>
    <insert id="addCropType" useGeneratedKeys="true" keyProperty="id">
        insert into t_crop_type(name_chs, name_en, create_user, is_manager) values (#{nameChs}, #{nameEn}, #{createUser}, #{isManager})
    </insert>
    <insert id="addCropVariety" useGeneratedKeys="true" keyProperty="id">
        insert into t_crop_variety(type_id, name_chs, name_en, create_user, is_manager) VALUES (#{typeId}, #{nameChs}, #{nameEn}, #{createUser}, #{isManager})
    </insert>
    <update id="updateRecord">
        update t_record
        <set>
            <if test="surveyTime != null">
                survey_time = #{surveyTime},
            </if>
            <if test="lat != null">
                lat = #{lat},
            </if>
            <if test="lng != null">
                lng = #{lng},
            </if>
            <if test="cropType != null">
                crop_type = #{cropType},
            </if>
            <if test="cropVariety != null">
                crop_variety = #{cropVariety},
            </if>
            <if test="diseaseType != null">
                disease_type = #{diseaseType},
            </if>
            <if test="diseaseSeverity != null">
                disease_severity = #{diseaseSeverity},
            </if>
            <if test="pestType != null">
                pest_type = #{pestType},
            </if>
            <if test="pestSeverity != null">
                pest_severity = #{pestSeverity},
            </if>
            <if test="droughtSeverity != null">
                drought_severity = #{droughtSeverity},
            </if>
            <if test="landMsg != null and landMsg != ''">
                land_msg = #{landMsg}
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    <delete id="deleteRecordById">
        delete from t_record where id = #{id}
    </delete>
    <delete id="deleteDiseaseImg">
        delete from t_disease_img where id = #{id}
    </delete>
    <delete id="deletePestImg">
        delete from t_pest_img where id = #{id}
    </delete>
    <delete id="deleteDroughtImg">
        delete from t_drought_img where id = #{id}
    </delete>
    <delete id="deleteDiseaseImgByRecordId">
        delete from t_disease_img where record_id = #{recordId}
    </delete>
    <delete id="deletePestImgByRecordId">
        delete from t_pest_img where record_id = #{recordId}
    </delete>
    <delete id="deleteDroughtImgByRecordImg">
        delete
        from t_drought_img
        where record_id = #{recordId};
    </delete>
    <select id="getRecordById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.Record">
        select id, user_id, survey_time, lat, lng, crop_type, crop_variety, disease_type, disease_severity, pest_type, pest_severity, drought_severity, land_msg, create_time, update_time, module
        from t_record
        where id = #{id}
    </select>
    <select id="getRecordCountByUserId" resultType="java.lang.Integer">
        select count(1)
        from t_record
        where user_id = #{userId} and module = #{module}
    </select>

    <select id="getRecordCountByUserIdAndTime" resultType="java.lang.Integer">
        select count(1)
        from t_record
        where user_id = #{userId} and module = #{module} 
          and (survey_time between #{startTime} and #{endTime})
    </select>
    <select id="pageRecord" resultType="com.oymn.geoinvestigatefinal.dao.pojo.Record">
        select id, user_id, survey_time, lat, lng, crop_type, crop_variety, disease_type, disease_severity, pest_type, pest_severity, drought_severity, land_msg, create_time, update_time, module
        from t_record
        where user_id = #{userId} and module = #{module}
        order by create_time desc
        limit #{start}, #{pageSize}
    </select>
    <select id="pageRecordWithTime" resultType="com.oymn.geoinvestigatefinal.dao.pojo.Record">
        select id, user_id, survey_time, lat, lng, crop_type, crop_variety, disease_type, disease_severity, pest_type, pest_severity, drought_severity, land_msg, create_time, update_time, module
        from t_record
        where user_id = #{userId} and module = #{module} 
          and (survey_time between #{startTime} and #{endTime})
        order by survey_time desc
        limit #{start}, #{pageSize}
    </select>
    
    <select id="getDiseaseImgById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.DiseaseImgRecord">
        select id, record_id, url imgUrl, create_time, update_time
        from t_disease_img
        where id = #{id}
    </select>
    <select id="getPestImgById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.DiseaseImgRecord">
        select id, record_id, url imgUrl, create_time, update_time
        from t_pest_img
        where id = #{id}
    </select>
    <select id="getDroughtImgById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.DiseaseImgRecord">
        select id, record_id, url imgUrl, create_time, update_time
        from t_drought_img
        where id = #{id}
    </select>
    <select id="getDiseaseImgRecord" resultType="com.oymn.geoinvestigatefinal.dao.pojo.DiseaseImgRecord">
        select id, record_id, url imgUrl, create_time, update_time
        from t_disease_img
        where record_id = #{recordId}
    </select>
    <select id="getPestImgRecord" resultType="com.oymn.geoinvestigatefinal.dao.pojo.PestImgRecord">
        select id, record_id, url imgUrl, create_time, update_time
        from t_pest_img
        where record_id = #{recordId}
    </select>
    <select id="getDroughtImgRecord" resultType="com.oymn.geoinvestigatefinal.dao.pojo.DroughtImgRecord">
        select id, record_id, url imgUrl, create_time, update_time
        from t_drought_img
        where record_id = #{recordId}
    </select>
    <select id="getAllDiseaseType" resultType="com.oymn.geoinvestigatefinal.dao.pojo.DiseaseType">
        select id, name_chs, name_en, create_user, is_manager, create_time, update_time
        from t_disease_type
        where is_manager = 1 or create_user = #{userId}
    </select>
    <select id="getAllPestType" resultType="com.oymn.geoinvestigatefinal.dao.pojo.PestType">
        select id, name_chs, name_en, create_user, is_manager, create_time, update_time
        from t_pest_type
        where is_manager = 1 or create_user = #{userId}
    </select>
    <select id="getAllCropType" resultType="com.oymn.geoinvestigatefinal.dao.pojo.CropType">
        select id, name_chs, name_en, create_user, is_manager, create_time, update_time
        from t_crop_type
        where is_manager = 1 or create_user = #{userId}
    </select>
    <select id="getCropVariety" resultType="com.oymn.geoinvestigatefinal.dao.pojo.CropVariety">
        select id, type_id, name_chs, name_en, create_user, is_manager, create_time, update_time
        from t_crop_variety
        where type_id = #{cropTypeId} and (create_user = #{userId} or is_manager = 1)
    </select>
    <select id="getDiseaseTypeById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.DiseaseType">
        select id, name_chs, name_en, create_user, is_manager, create_time, update_time
        from t_disease_type
        where id = #{diseaseTypeId}
    </select>
    <select id="getSeverityById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.Severity">
        select id, name_chs, name_en, create_time, update_time
        from t_severity
        where id = #{severityId}
    </select>
    <select id="getPestTypeById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.PestType">
        select id, name_chs, name_en, create_user, is_manager, create_time, update_time
        from t_pest_type
        where id = #{pestTypeId}
    </select>
    <select id="getCropTypeById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.CropType">
        select id, name_chs, name_en, create_user, is_manager, create_time, update_time
        from t_crop_type
        where id = #{cropTypeId}
    </select>
    <select id="getCropVarietyById" resultType="com.oymn.geoinvestigatefinal.dao.pojo.CropVariety">
        select id, type_id, name_chs, name_en, create_user, is_manager, create_time, update_time
        from t_crop_variety
        where id = #{cropVarietyId}
    </select>
</mapper>
